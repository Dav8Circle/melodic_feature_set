name: Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Install package in editable mode
      run: |
        pip install -e .
    
    - name: Run tests
      run: |
        python tests/run_tests.py
    
    - name: Run tests with coverage
      run: |
        python -m pytest tests/ --doctest-modules src/ -v --cov=src/melodic_feature_set --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-module-setup:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-3.12-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-3.12-
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Install package in editable mode
      run: |
        pip install -e .
    
    - name: Run module setup tests
      run: |
        python -m pytest tests/test_module_setup.py -v

  test-codespaces-compatibility:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Install package in editable mode
      run: |
        pip install -e .
    
    - name: Test imports (Codespaces-style)
      run: |
        python -c "from melodic_feature_set.corpus import essen_corpus, essen_first_ten; print('Import successful')"
        python -c "from melodic_feature_set.features import get_all_features; print('Features import successful')"
        python -c "from melodic_feature_set import essen_corpus, essen_first_ten; print('Main package import successful')"
    
    - name: Run corpus tests
      run: |
        python -m pytest tests/test_corpus_import.py -v
    
    - name: Run IDyOM setup tests
      run: |
        python -m pytest tests/test_idyom_setup.py -v

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort mypy
    
    - name: Run flake8
      run: |
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run black (check only)
      run: |
        black --check src/ tests/
    
    - name: Run isort (check only)
      run: |
        isort --check-only src/ tests/
    
    - name: Run mypy
      run: |
        mypy src/ --ignore-missing-imports --no-strict-optional
